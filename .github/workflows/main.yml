name: Build
on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    # https://github.com/actions/virtual-environments#available-environments
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build
        shell: bash -l -eo pipefail {0}
        run: |
          nvm install $(cat .nvmrc)
          nvm use
          mkdir bin
          PATH="$PWD/bin:$PATH"
          curl -L https://github.com/rustwasm/wasm-pack/releases/download/v0.9.1/wasm-pack-v0.9.1-x86_64-unknown-linux-musl.tar.gz | tar -zx --strip-components 1
          mv wasm-pack bin
          npm run docs-parser
          npm run test-docs-parser
          npm ci
          npm run export
      - uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: out
  stork-builder:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build
        working-directory: tools/stork-builder
        run: cargo build --verbose --release
      - uses: actions/upload-artifact@v2
        with:
          name: stork-builder
          path: tools/stork-builder/target/release/stork-builder
  stork-index:
    needs:
      - build
      - stork-builder
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: out
      - uses: actions/download-artifact@v2
        with:
          name: stork-builder
      - name: build
        env:
          RUST_LOG: stork_builder=info
          RUST_BACKTRACE: 1
        run: |
          chmod +x stork-builder
          ./stork-builder -o blog.st -m src/docs out
      - uses: actions/upload-artifact@v2
        with:
          name: stork-index
          path: blog.st
  publish:
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/master' && github.repository == 'sukawasatoru/blog'
    runs-on: ubuntu-latest
    needs:
      - build
      - stork-index
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.2.0
      - uses: actions/download-artifact@v2
        with:
          name: artifact
      - uses: actions/download-artifact@v2
        with:
          name: stork-index
      - name: Publish
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.LOUDFLARE_API_TOKEN }}
        run: npx run wrangler pages publish --project-name blog .
